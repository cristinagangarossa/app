package com.neperiagroup.happysalus;

import android.bluetooth.BluetoothDevice;
import android.content.Context;
import android.content.Intent;
import android.os.Parcelable;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.BaseAdapter;
import android.widget.ListView;
import android.widget.TextView;

import com.neperiagroup.happysalus.bean.ScanDevices;

import java.util.ArrayList;
import java.util.List;

public class DeviceFoundActivity extends AppCompatActivity {

    private static final String TAG = DeviceFoundActivity.class.getName();
    private static final String KEY_DEVICES = TAG + ".devices";

    private ListView listViewDevices;
    private List<ScanDevices> listDevices;
    private DeviceListAdapter mAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_device_found);

        listViewDevices = findViewById(R.id.listViewDevices);

        listDevices = getIntent().getParcelableArrayListExtra(KEY_DEVICES); //Inizializza la lista

        mAdapter = new DeviceListAdapter();

        listViewDevices.setAdapter(mAdapter);

        listViewDevices.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                BluetoothDevice device = listDevices.get(i).getDevice();
                startActivity(ConnectActivity.getIstanceIntent(getApplicationContext(), device));
                //Intent intent;
                if (BuildConfig.RXJAVA) {
                    //intent = new Intent(MainActivity.this, RxConnectActivity.class);
                } else {
                    //intent = new Intent(MainActivity.this, ConnectActivity.class);
                }
                //intent.putExtra(ConnectActivity.EXTRA_DEVICE, device);
                //startActivity(intent);
            }
        });
    }

    public static Intent getIstanceIntent(Context context, List<ScanDevices> mDevices){
        Intent intent = new Intent(context, DeviceFoundActivity.class);
        intent.putParcelableArrayListExtra(KEY_DEVICES, (ArrayList<? extends Parcelable>) mDevices);
        return intent;
    }

    private class DeviceListAdapter extends BaseAdapter {

        @Override
        public int getCount() {
            return listDevices.size();
        }

        @Override
        public Object getItem(int i) {
            return listDevices.get(i).getDevice();
        }

        @Override
        public long getItemId(int i) {
            return i;
        }

        @Override
        public View getView(int i, View view, ViewGroup viewGroup) {
            ViewHolder holder;
            if (view == null) {
                view = LayoutInflater.from(DeviceFoundActivity.this).inflate(R.layout.device_list_item, viewGroup, false);
                holder = new ViewHolder();
                holder.address_device = (TextView) view.findViewById(R.id.address_device);
                holder.name_device = (TextView) view.findViewById(R.id.name_device);
                holder.rssi_device = (TextView) view.findViewById(R.id.rssi_device);
                view.setTag(holder);
            } else {
                holder = (ViewHolder) view.getTag();
            }
            ScanDevices device = listDevices.get(i);
            holder.address_device.setText("MAC : " + device.getDevice().getAddress());
            holder.name_device.setText("NAME : " + device.getDevice().getName());
            holder.rssi_device.setText("RSSI : " + String.valueOf(device.getRssi()));
            return view;
        }

        class ViewHolder {
            TextView address_device;
            TextView name_device;
            TextView rssi_device;
        }
    }
}
