package com.neperiagroup.happysalus;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.support.v4.view.GravityCompat;
import android.support.v4.view.ViewPager;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;

import com.neperiagroup.happysalus.adapters.DeviceDataAdapter;
import com.neperiagroup.happysalus.adapters.ScrollDevicesAdapter;
import com.neperiagroup.happysalus.bean.DataDevice;
import com.neperiagroup.happysalus.bean.Device;
import com.neperiagroup.happysalus.services.DeviceService;

public class DashboardActivity extends AppCompatActivity{
    private Toolbar toolbar;
    private TextView toolbarTitle;
    private DrawerLayout drawer;

    private ViewPager pager;
    private ScrollDevicesAdapter scrollAdapter;
    private Button btnBack;
    private Button btnNext;

    private ListView deviceDataList;
    private DeviceDataAdapter dataAdapter;
    private Button btnPair;

    private DeviceService deviceService;
    private Device selectedDevice;

    @SuppressLint("ResourceAsColor")
    @Override
    protected void onCreate(Bundle savedInstanceState){
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_dashboard);

        //service setup.
        deviceService = new DeviceService();

        //toolbar setup.
        toolbar = findViewById(R.id.toolbar);
        toolbar.setTitleTextColor(R.color.white);
        setSupportActionBar(toolbar);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_menu);
        getSupportActionBar().setDisplayShowTitleEnabled(false);
        toolbarTitle = findViewById(R.id.dashboard_toolbar_title);
        toolbarTitle.setText(deviceService.getDevices().get(0).getModelDevice());

        //drawer setup.
        drawer = findViewById(R.id.drawer_layout);

        //button back setup.
        btnBack = findViewById(R.id.backDeviceButton);
        btnBack.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View view){
                pager.setCurrentItem(getItem(-1));
            }
        });

        btnNext = findViewById(R.id.nextDeviceButton);
        btnNext.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View view){
                pager.setCurrentItem(getItem(+1));
            }
        });

        //pager setup.
        pager = (ViewPager) findViewById(R.id.viewpager);
        scrollAdapter = new ScrollDevicesAdapter(getApplicationContext(), deviceService.getDevices());
        pager.setAdapter(scrollAdapter);
        pager.addOnPageChangeListener(new ViewPager.OnPageChangeListener(){
            @Override
            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels){}

            @Override
            public void onPageSelected(int position){
                selectedDevice = deviceService.getDevices().get(position);
                toolbarTitle.setText(selectedDevice.getModelDevice());
                btnPair.setVisibility((deviceService.getDevices().get(position).isPaired()) ? View.INVISIBLE : View.VISIBLE);
                dataAdapter = new DeviceDataAdapter(getApplicationContext(), selectedDevice.getListDataDevice());
                deviceDataList.setAdapter(dataAdapter);
            }

            @Override
            public void onPageScrollStateChanged(int state){}
        });

        //device data setup.
        deviceDataList = findViewById(R.id.listViewDeviceData);
        selectedDevice = deviceService.getDevices().get(0);
        dataAdapter = new DeviceDataAdapter(getApplicationContext(), selectedDevice.getListDataDevice());
        deviceDataList.setAdapter(dataAdapter);
        deviceDataList.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id){
                DataDevice dataDevice = selectedDevice.getListDataDevice().get(position);
                startActivity(HeartRateStatsActivity.getInstanceIntent(getApplicationContext(), dataDevice, selectedDevice.getModelDevice()));
            }
        });

        //button pair setup.
        btnPair = findViewById(R.id.buttonAssociaDevice);
        btnPair.setVisibility((deviceService.getDevices().get(0).isPaired()) ? View.INVISIBLE : View.VISIBLE);
        btnPair.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View view){
                startActivity(SearchActivity.getInstanceIntent(getApplicationContext()));
            }
        });
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu){
        getMenuInflater().inflate(R.menu.menu_main_activity, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item){
        switch(item.getItemId()){
            case android.R.id.home:
                drawer.openDrawer(GravityCompat.START);
                return true;
            case R.id.settings:
                startActivity(SettingsActivity.getIstanceIntent(getApplicationContext()));
                break;
        }

        return super.onOptionsItemSelected(item);
    }

    public static Intent getInstanceIntent(Context context){
        Intent intent = new Intent(context, DashboardActivity.class);
        return intent;
    }

    private int getItem(int i){
        return pager.getCurrentItem() + i;
    }
}

